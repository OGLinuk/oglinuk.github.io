<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Auction System on Ponte Posterum</title>
    <link>https://oglinuk.github.io/tags/auction-system/</link>
    <description>Recent content in Auction System on Ponte Posterum</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://oglinuk.github.io/tags/auction-system/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Web701 19</title>
      <link>https://oglinuk.github.io/post/web701-19/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://oglinuk.github.io/post/web701-19/</guid>
      <description>Web Development 701 ~ Auction System (cont.) In the last blog we covered authentication with the TradeMe API. After some playing around, I hit a wall with the list an item API method. Instead of wasting time trying to figure it out I am going to implement a simple dummy auction system. This is partly because I&amp;rsquo;d rather have something for an auction system than nothing and also partly because I have more important projects to work on.</description>
    </item>
    
    <item>
      <title>Web701 18</title>
      <link>https://oglinuk.github.io/post/web701-18/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://oglinuk.github.io/post/web701-18/</guid>
      <description>Web Development 701 ~ Auction System With the authentication and calculator finished its now time to implement the auction system. For this feature I am going to be implementing it using the TradeMe API. This is partially because there is no existing auction extension in django and partially because I love API&amp;rsquo;s and this is a perfect opportunity to get experience integrating one.
The first thing to do is to head over and read the registering an application section.</description>
    </item>
    
  </channel>
</rss>